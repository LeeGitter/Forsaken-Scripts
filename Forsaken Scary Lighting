local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Camera = workspace.CurrentCamera

local lp = Players.LocalPlayer
local character = lp.Character or lp.CharacterAdded:Wait()
local killersFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers")

-- ðŸ§¼ Clean visual setup
Lighting.Technology = Enum.Technology.Future

for _, v in ipairs(Lighting:GetChildren()) do
    if v:IsA("ColorCorrectionEffect") then
        v:Destroy()
    end
end

local cc = Instance.new("ColorCorrectionEffect")
cc.Name = "ThreatVisuals"
cc.Contrast = 0.1
cc.Saturation = -0.6
cc.Enabled = true
cc.Parent = Lighting

local baseFOV = Camera.FieldOfView
local maxDistance = 100

-- ðŸ”ª Threat calculation
local function getThreat()
    local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not root or not killersFolder then return 0 end

    local closest = math.huge
    for _, killer in ipairs(killersFolder:GetChildren()) do
        local kRoot = killer:FindFirstChild("HumanoidRootPart")
        if kRoot then
            local dist = (kRoot.Position - root.Position).Magnitude
            if dist < closest then closest = dist end
        end
    end
    return closest <= maxDistance and (1 - closest / maxDistance) or 0
end

-- ðŸŒ€ Visual update loop
RunService.RenderStepped:Connect(function()
    local threat = getThreat()

    -- Contrast scales from 0.1 to 0.4
    cc.Contrast = 0.1 + (0.3 * threat)

    -- FOV scales from base to +50%
    Camera.FieldOfView = baseFOV + (baseFOV * 0.5 * threat)
end)
