--[[
    Hostile Visual Lockdown v1.0
    Designed for Delta exploit environment
    Author: Cesar + Copilot
    Purpose: Overwrite-proof, entity-grade color control
]]

local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

-- Configurable parameters
local EFFECT_NAME = "EntityColorLock"
local BASE_TINT = Color3.fromRGB(255, 180, 180)
local MAX_TINT = Color3.fromRGB(255, 80, 80)
local CONTRAST = 0.25
local REAPPLY_INTERVAL = 0.5

-- Threat function (can be replaced with external signal)
local function getThreat()
    return math.clamp(math.sin(tick() * 0.75) * 0.5 + 0.5, 0, 1)
end

-- Purge all rogue ColorCorrectionEffects
local function purgeEffects()
    for _, v in ipairs(Lighting:GetChildren()) do
        if v:IsA("ColorCorrectionEffect") and v.Name ~= EFFECT_NAME then
            v:Destroy()
        end
    end
end

-- Apply locked effect
local function applyEffect()
    purgeEffects()

    local cc = Lighting:FindFirstChild(EFFECT_NAME)
    if not cc then
        cc = Instance.new("ColorCorrectionEffect")
        cc.Name = EFFECT_NAME
        cc.Contrast = CONTRAST
        cc.Saturation = 0
        cc.TintColor = BASE_TINT
        cc.Enabled = true
        cc.Parent = Lighting
    end
end

-- Update tint based on threat
local function updateTint()
    local cc = Lighting:FindFirstChild(EFFECT_NAME)
    if not cc then return end

    local threat = getThreat()
    local r = BASE_TINT.R + (MAX_TINT.R - BASE_TINT.R) * threat
    local g = BASE_TINT.G + (MAX_TINT.G - BASE_TINT.G) * threat
    local b = BASE_TINT.B + (MAX_TINT.B - BASE_TINT.B) * threat

    cc.TintColor = Color3.fromRGB(r * 255, g * 255, b * 255)
end

-- Lock pipeline every REAPPLY_INTERVAL seconds
task.spawn(function()
    while true do
        applyEffect()
        task.wait(REAPPLY_INTERVAL)
    end
end)

-- Real-time tint update
RunService.RenderStepped:Connect(updateTint)
