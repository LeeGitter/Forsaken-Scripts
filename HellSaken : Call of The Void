-- Flicker effect before payloads
local lighting = game:GetService("Lighting")
local originalAmbient = lighting.Ambient
local originalBrightness = lighting.Brightness

-- Blackout
lighting.Ambient = Color3.new(0, 0, 0)
lighting.Brightness = 0
wait(0.2)

-- Flicker sequence
for i = 1, 6 do
    lighting.Ambient = Color3.new(1, 1, 1)
    lighting.Brightness = 2
    wait(math.random(5, 15) / 100)
    lighting.Ambient = Color3.new(0, 0, 0)
    lighting.Brightness = 0
    wait(math.random(5, 15) / 100)
end

-- Surge
lighting.Ambient = Color3.new(0.5, 0, 0)
lighting.Brightness = 1.5
wait(0.3)

-- Restore original lighting
lighting.Ambient = originalAmbient
lighting.Brightness = originalBrightness

-- Payload execution
local urls = {
    "https://raw.githubusercontent.com/LeeGitter/Forsaken-Scripts/refs/heads/main/Spawn%20Symbol%20Indicator",
    "https://raw.githubusercontent.com/LeeGitter/Forsaken-Scripts/refs/heads/main/Scary%20Audio",
    "https://raw.githubusercontent.com/LeeGitter/Forsaken-Scripts/refs/heads/main/Killer%20Reactive%20Lighting"
}

for _, url in ipairs(urls) do
    loadstring(game:HttpGet(url, true))()
end
